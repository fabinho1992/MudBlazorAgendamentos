@inherits LayoutComponentBase
@inject NavigationManager Navigation

<MudThemeProvider IsDarkMode="_isDark"/>
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />
<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3">Application</MudText>
        <MudSpacer />
        <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" />
        @if (_isDark)
        {
            <MudIconButton @onclick="DarkToggle" Icon="@Icons.Material.Filled.WbSunny" Color="Color.Inherit" />
        }
        else
        {
            <MudIconButton @onclick="DarkToggle" Icon="@Icons.Material.Filled.DarkMode" Color="Color.Inherit" />
        }

        <AuthorizeView>
            <MudIconButton Icon="@Icons.Material.Outlined.ExitToApp" @onclick=LogOff Color="Color.Inherit"/>
        </AuthorizeView>

    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu />
    </MudDrawer>
    <MudMainContent Class="mt-16 pa-4">
        @Body
    </MudMainContent>
</MudLayout>


<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    private bool _drawerOpen = true;
    private bool _isDark = true;

    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private void DarkToggle()
    {
        _isDark = !_isDark;
    }

    private void LogOff()
    {
        Navigation.NavigateTo("/Account/Manage/Logout");
    }

}


